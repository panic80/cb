version: '3.8'

services:
  # Redis Cache Service
  redis:
    image: redis:7-alpine
    container_name: cf-travel-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cf-travel-bot-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - ENABLE_CACHE=true
      - ENABLE_RATE_LIMIT=true
      - ENABLE_LOGGING=true
      - LOG_LEVEL=info
      - CACHE_TTL=3600000
      - RATE_LIMIT_MAX=60
      - RATE_LIMIT_WINDOW=60000
    env_file:
      - .env.production
    volumes:
      - app_logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: cf-travel-bot-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - app-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local
  app_logs:
    driver: local
  nginx_logs:
    driver: local

networks:
  app-network:
    driver: bridge
COMPOSE_EOF < /dev/null